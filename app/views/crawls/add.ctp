<div class='message start-up-tip hidden'>
说明：
<br />I.   本页面提供基本爬虫控制，主要目标是采集、抽取和分析单个站点内的详细页，如电子商务、酒店、房产、旅游线路、票务等等
<br />II.  任务创建完毕后，可以通过编辑界面深度控制爬虫行为以满足其他需求
<br />III. 一个爬虫任务对应一个"弹性分布式网页集(RDW)"，基于Spark的"弹性分布式数据集(RDD)"，后续数据分析均以RDD为核心模型
</div>
<div class="crawls form auto-validate">
<div class='help small gray right'>帮助</div>
<?php echo $this->Form->create('Crawl'); ?>
	<fieldset>
 		<legend><?php __('创建爬虫任务（定义弹性分布式网页集）'); ?></legend>
 		<?php 

// 		$m = [
// 				'name' => '<p class="m hidden">Crawl name, random generated by default</p>',
// 				'round' => '<p class="m hidden">Crawl round number</p>',
// 				'Seed.url' => '<p class="m hidden">Page entrance for crawling</p>',
// 				'CrawlFilter.domain_pattern' => '<p class="m hidden">Crawl sites matches this pattern only</p>',
// 				'CrawlFilter.url_patterns' => '<p class="m hidden">Crawl urls matches this pattern only, eg : "http://item.jd.com/\d+"</p>',
// 				'CrawlFilter.keywords' => '<p class="m hidden">Crawl pages MUST contains all of the words, seperated by commas(,). eg : "手机,三星"</p>',
// 				'CrawlFilter.bad_words' => '<p class="m hidden">Crawl pages MUST NOT contains any of the words, seperated by commas(,). eg : "电脑,苹果"</p>',
// 				'CrawlFilter.text_pattern' => '<p class="m hidden">Crawl pages whose text matches this pattern</p>'
// 		];

		$m = [
				'name' => '<p class="m hidden">任务名称，默认自动生成</p>',
				'rounds' => '<p class="m hidden">抓取深度。爬虫采用广度优先算法，即：<br />
							  I : 爬种子链接，得到第一层网页集；<br />
							 II : 抽取第一层网页集中的URL，作为第二层网页集合的种子，并开始爬第二层网页；<br />
							III : 反复重复I, II两个步骤，直到所有目标网页都成功抓取。
						</p>',
				'Seed.url' => '<p class="m hidden">这是爬虫抓取的第一个页面，建议使用列表页</p>',
				'CrawlFilter.domain_patterns' => '',
// 				'CrawlFilter.url_patterns' => "<p class='m hidden'>链接正则表达式。<br />
// 							用前缀+表示 \"<strong class='red'>需要爬</strong>符合这个模式的链接\"<br />
// 							用前缀-表示 \"<strong class='red'>不要爬</strong>符合这个模式的链接\"
// 						</p>",
				'CrawlFilter.url_filter' => "<p class='m hidden'><strong class='red'>列表页</strong>正则表达式模式</p>",
				'CrawlFilter.text_filter' => "<p class='m hidden'><strong class='red'>详细页</strong>正则表达式模式</p>",
				'CrawlFilter.keywords' => "<p class='m hidden'>可选，关键词用逗号、分号或者空格分隔。<br />
					  如果填写，表明只有包含所有这些关键词的网页
						<strong class='red'>能够</strong>成为种子网页。如 : '手机,三星'</p>",
				'CrawlFilter.bad_words' => "<p class='m hidden'>可选，关键词用逗号、分号或者空格分隔。<br />
						如果填写，表明包含所有这些关键词的网页
						<strong class='red'>不能</strong>成为种子网页。如 : '电脑,苹果'</p>",
				'CrawlFilter.text_pattern' => '<p class="m hidden">Crawl pages whose text matches this pattern</p>',
				'PageEntity.name' => '<p class="m hidden">根网页实体名，譬如"商品"。
								<br />一个网页中可能包含多个实体，譬如"商品"详细页中包含"店铺"和"评论"。可在创建后进入编辑页面配置其他实体</p>'
		];

		$defaultName = $currentUser['name']."-crawl-".date('YmdHis')."-".rand(1, 1000);
		$defaultName = preg_replace("/\s+/", "-", $defaultName);

		echo $this->Form->input('name', array('label' => '任务名称', 'value' => $defaultName, 'after' => $m['name']));
//		echo $this->Form->input('rounds', array('label' => '爬取深度', 'value' => '3', 'after' => $m['rounds']));
		echo $this->Form->input('Seed.0.url', array('label' => '入口链接', 'after' => $m['Seed.url']));
//		echo $this->Form->input('CrawlFilter.domain_pattern', array('after' => $m['CrawlFilter.domain_pattern']));
		echo $this->Form->input('CrawlFilter.0.url_filter',
				array('label' => '列表页链接模式', 'rows' => '1', 'after' => $m['CrawlFilter.url_filter']));
// 		echo $this->Form->input('CrawlFilter.0.text_filter_contains', array('label' => '列表页筛选关键词', 'after' => $m['CrawlFilter.text_filter']));
// 		echo $this->Form->input('CrawlFilter.0.text_filter_not_contains', array('label' => '列表页过滤关键词', 'after' => $m['CrawlFilter.text_filter']));
// 		echo $this->Form->input('CrawlFilter.0.parse_block_filter', array('label' => '列表页筛选区块', 'after' => $m['CrawlFilter.text_filter']));
// 		echo $this->Form->input('CrawlFilter.0.parse_block_filter', array('label' => '列表页过滤区块', 'after' => $m['CrawlFilter.text_filter']));

		echo $this->Form->input('CrawlFilter.1.url_filter',
				array('label' => '详细页链接模式', 'rows' => '1', 'after' => $m['CrawlFilter.url_filter']));
//		echo $this->Form->input('CrawlFilter.text_pattern', array('value' => '.+', 'after' => $m['CrawlFilter.text_pattern']));
		echo $this->Form->input('PageEntity.0.name', array('label' => '根实体名', 'after' => $m['PageEntity.name']));

//		echo $this->Form->input('Extraction.PageEntity.0.PageEntityField.0', array('label' => '字段', 'after' => ''));

		echo $this->Form->input('description', array('label' => '简单说明（可选）'));
	?>
	</fieldset>
<?php echo $this->Form->end(__('Submit', true)); ?>
</div>
<div class="actions">
	<h3><?php __('Actions'); ?></h3>
	<ul>
		<li><?php echo $this->Html->link(__('List Crawls', true), array('action' => 'index'));?></li>
	</ul>
</div>
